# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: chainrpc/chainkit.proto for package 'chainrpc'

require 'grpc'
require_relative 'chainkit_pb'

module Chainrpc
  module ChainKit
    # ChainKit is a service that can be used to get information from the
    # chain backend.
    class Service

      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'chainrpc.ChainKit'

      # lncli: `chain getblock`
      # GetBlock returns a block given the corresponding block hash.
      rpc :GetBlock, ::Chainrpc::GetBlockRequest, ::Chainrpc::GetBlockResponse
      # lncli: `chain getblockheader`
      # GetBlockHeader returns a block header with a particular block hash.
      rpc :GetBlockHeader, ::Chainrpc::GetBlockHeaderRequest, ::Chainrpc::GetBlockHeaderResponse
      # lncli: `chain getbestblock`
      # GetBestBlock returns the block hash and current height from the valid
      # most-work chain.
      rpc :GetBestBlock, ::Chainrpc::GetBestBlockRequest, ::Chainrpc::GetBestBlockResponse
      # lncli: `chain getblockhash`
      # GetBlockHash returns the hash of the block in the best blockchain
      # at the given height.
      rpc :GetBlockHash, ::Chainrpc::GetBlockHashRequest, ::Chainrpc::GetBlockHashResponse
    end

    Stub = Service.rpc_stub_class
  end
end
